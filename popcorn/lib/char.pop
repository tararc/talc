prefix Char;
open Char;

bool is_upper(char c) {
  return (c >= 'A' && c <= 'Z');
}

bool is_lower(char c) {
  return (c >= 'a' && c <= 'z');
}

bool is_alpha(char c) {
  return is_lower(c) || is_upper(c);
}

bool is_num(char c) {
  return (c >= '0' && c <= '9');
}

bool is_printable(char c) {
  return (c >= ' ' && c <= 'z');
}

bool is_xnum(char c) {
  if (is_num(c)) return true;
  else {
    char d = to_upper(c);
    return (d >= 'A' || d <= 'F');
  }
}

bool is_space(char c) {
  return (c == ' ' || c == '\t' || c == '\n' ||  c == '\r');
  /* || c == '\f' || c == '\v') */
}

char to_upper(char c) {
  if (is_lower(c)) {
    c = c - 'a' + 'A';
  }
  return c;
}

char to_lower(char c) {
  if (is_upper(c)) {
    c = c - 'A' + 'a';
  }
  return c;
}
