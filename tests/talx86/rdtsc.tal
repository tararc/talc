; TAL IMPLEMENTATION rdtsc
; This file was generated by TALC
	INCLUDE	TAL.INC
	_begin_TAL


	TAL_IMPORT	pop_runtime.tali
	TAL_IMPORT	rdtsc_i.tali

	TAL_EXPORT	tal_prog.tali
	TAL_EXPORT	rdtsc_e.tali

	TYPE	<bogus_option$1 :T4 = ^T[0]>

	CODE

_pop_main:
LABELTYPE <All[s1:Ts s2:Ts e1:Tcap e2:Tcap].code {cap: &[e1,e2],EBP: sptr (?E s2 e2),ESP: sptr (?Sv s1 s2 e1 e2)@(?E s2 e2)}>	
	RDTSC
	PUSH    EAX
	PUSH	DWORD PTR [_tal_stdout]
	PUSH	EAX
	PUSH	DWORD PTR [ESP]
	PUSH	DWORD PTR [ESP+8]
	CALL	tapp(_fprint_int,<ESP 2 6 s1,EBP 1,e1,e2>)
	ADD	ESP,16
	PUSH	DWORD PTR [_tal_stdout]
	PUSH	DWORD PTR [ESP]
	CALL	tapp(_fprint_newline,<ESP 1 4 s1,EBP 1,e1,e2>)
	ADD	ESP,8
; RDTSC .
	RDTSC
	PUSH    EAX
	PUSH	DWORD PTR [_tal_stdout]
	PUSH	EAX
	PUSH	DWORD PTR [ESP]
	PUSH	DWORD PTR [ESP+8]
	CALL	tapp(_fprint_int,<ESP 2 7 s1,EBP 1,e1,e2>)
	ADD	ESP,16
	MOV	ECX,[ESP]
	PUSH	DWORD PTR [_tal_stdout]
	PUSH	DWORD PTR [ESP]
	CALL	tapp(_fprint_newline,<ESP 1 5 s1,EBP 1,e1,e2>)
	ADD	ESP,8
; Compute the difference
	POP	EAX
	POP	EBX
	SUB	EAX,EBX
	PUSH	DWORD PTR [_tal_stdout]
	PUSH	EAX
	PUSH	DWORD PTR [ESP]
	PUSH	DWORD PTR [ESP+8]
	CALL	tapp(_fprint_int,<ESP 2 5 s1,EBP 1,e1,e2>)
	ADD	ESP,16
	MOV	ECX,[ESP]
	PUSH	DWORD PTR [_tal_stdout]
	PUSH	DWORD PTR [ESP]
	CALL	tapp(_fprint_newline,<ESP 1 3 s1,EBP 1,e1,e2>)
	ADD	ESP,8
	RETN

_pop_exn_handler_wrapper:
LABELTYPE <code {EAX: ?exn,ESP: sptr se}>
	PUSH	EAX
	CALL	_pop_exn_handler
	POP	EAX
	PUSH	1
	JMP	tapp(_tal_exit,<se>)
_tal_main:
LABELTYPE <code {ESP: sptr se}>
	PUSH	_pop_exn_handler_wrapper
	MOV	EBP,ESP
	CALL	tapp(_pop_main,<se,se,cap[],cap[]>)
	POP	EBX
	PUSH	0
	JMP	tapp(_tal_exit,<se>)
_?NullPointer:
LABELTYPE <All[s1:Ts s2:Ts e1:Tcap e2:Tcap].code {cap: &[e1,e2],EBP: sptr (?E s2 e2),ESP: sptr s1@(?E s2 e2)}>
	MOV	EAX,DWORD PTR [_NullPointer_pkt]
	MOV	ESP,EBP
	POP	EBX
	JMP	EBX
_?UnionVariant:
LABELTYPE <All[s1:Ts s2:Ts e1:Tcap e2:Tcap].code {cap: &[e1,e2],EBP: sptr (?E s2 e2),ESP: sptr s1@(?E s2 e2)}>
	MOV	EAX,DWORD PTR [_UnionVariant_pkt]
	MOV	ESP,EBP
	POP	EBX
	JMP	EBX
_?ArrayBounds:
LABELTYPE <All[s1:Ts s2:Ts e1:Tcap e2:Tcap].code {cap: &[e1,e2],EBP: sptr (?E s2 e2),ESP: sptr s1@(?E s2 e2)}>
	MOV	EAX,DWORD PTR [_ArrayBounds_pkt]
	MOV	ESP,EBP
	POP	EBX
	JMP	EBX

	DATA

	_end_TAL
	END
