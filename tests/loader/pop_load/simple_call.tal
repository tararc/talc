; TAL IMPLEMENTATION simple_call
; This file was generated by TALC
	INCLUDE	TAL.INC
	_begin_TAL


	TAL_IMPORT	pop_runtime.tali
	TAL_IMPORT	simple_call_i.tali
	TAL_IMPORT	dlpop_e.tali

	TAL_EXPORT	tal_prog.tali
	TAL_EXPORT	simple_call_e.tali

	TYPE	<bogus_option$1 :T4 = ^T[0]>

	CODE

_pop_main:
LABELTYPE <All[s1:Ts s2:Ts e1:Tcap e2:Tcap].code {cap: &[e1,e2],EBP: sptr (?E s2 e2),ESP: sptr (?Sv s1 s2 e1 e2)@(?E s2 e2)}>
	PUSH	EBP
	PUSH	tapp(trycatch$3,<s1,s2,e1,e2>)
	MOV	EBP,ESP
; 	Begin try body.
	PUSH	DWORD PTR [_b]
	PUSH	_tr$$4
	PUSH	string$5
	CALL	tapp(_add_symbol,<crint crtrue crb4,ESP 3 3 se,EBP 1,cap[],&[e1,e2]>)
	ADD	ESP,8
	MOV	[ESP],string$6
	CALL	tapp(_dlopen,<ESP 1 1 se,EBP 1,cap[],&[e1,e2]>)
	PUSH	EAX
	CALL	tapp(_print_table, <ESP 0 2 se, EBP 1, cap[], &[e1,e2]>)
	POP	EAX
	MOV	[ESP],_tr$$8
	PUSH	string$7
	PUSH	EAX
	CALL	tapp(_print_handle_table, <ESP 1 4 se, EBP 1,cap[],&[e1,e2]>)
	POP	EAX
	CALL	tapp(_dlpop?lookup_symbol,<(crfn (crint crtrue crb4) (crcons (crint crtrue crb4) crnull)),\
		ESP 3 3 se,EBP 1,cap[],&[e1,e2]>)
;	ADD	ESP,4
	MOV	[ESP],EAX
	PUSH	string$8
	CALL	tapp(_Core?print_string,<ESP 1 3 se,EBP 1,cap[],&[e1,e2]>)
	MOV	DWORD PTR [ESP],subsume(<B4>,2)
	MOV	EAX,[ESP+4]
	CALL	tapp(EAX,<ESP 1 3 se,EBP 1,cap[],&[e1,e2]>)
	MOV	[ESP],EAX
	CALL	tapp(_Core?print_int,<ESP 1 3 se,EBP 1,cap[],&[e1,e2]>)
	ADD	ESP,12
; 	End try body.
	ADD	ESP,4
	POP	EBP
	JMP	tapp(tryend$4,<s1,s2,e1,e2>)
trycatch$3:
LABELTYPE <All[s1:Ts s2:Ts e1:Tcap e2:Tcap].code {cap: &[e1,e2],EAX: ?exn,ESP: sptr (?Ha (?Sv s1 s2 e1 e2) s2 e1 e2)}>
	POP	EBP
	PUSH	EAX
	MOV	EAX,[ESP]
	UNPACK	c$10,EAX,EAX
	MOV	EBX,[EAX]
	FALLTHRU	<c$10,s1,s2,e1,e2>
exn_case$11:
LABELTYPE <All[c$10:Tm s1:Ts s2:Ts e1:Tcap e2:Tcap].code {cap: &[e1,e2],EAX: ^*[(?exnname c$10)^r,c$10],EBX: ?exnname c$10,EBP: sptr (?E s2 e2),ESP: sptr ?exn::(?Sv s1 s2 e1 e2)@(?E s2 e2)}>
	CMP	EBX,Core?FileOpenError?exn
	JNE	tapp(exn_case$12,<c$10,s1,s2,e1,e2>)
	PUSH	DWORD PTR [EAX+4]
	PUSH	string$13
	CALL	tapp(_Core?print_string,<ESP 1 4 s1,EBP 1,e1,e2>)
	ADD	ESP,4
	PUSH	DWORD PTR [ESP]
	CALL	tapp(_Core?print_string,<ESP 1 4 s1,EBP 1,e1,e2>)
	ADD	ESP,8
	JMP	tapp(switchend$9,<s1,s2,e1,e2>)
exn_case$12:
LABELTYPE <All[c$10:Tm s1:Ts s2:Ts e1:Tcap e2:Tcap].code {cap: &[e1,e2],EAX: ^*[(?exnname c$10)^r,c$10],EBX: ?exnname c$10,EBP: sptr (?E s2 e2),ESP: sptr ?exn::(?Sv s1 s2 e1 e2)@(?E s2 e2)}>
	CMP	EBX,FailsTypeCheck?exn
	JNE	tapp(exn_case$14,<c$10,s1,s2,e1,e2>)
	PUSH	string$15
	CALL	tapp(_Core?print_string,<ESP 1 3 s1,EBP 1,e1,e2>)
	ADD	ESP,4
	JMP	tapp(switchend$9,<s1,s2,e1,e2>)
exn_case$14:
LABELTYPE <All[c$10:Tm s1:Ts s2:Ts e1:Tcap e2:Tcap].code {cap: &[e1,e2],EAX: ^*[(?exnname c$10)^r,c$10],EBX: ?exnname c$10,EBP: sptr (?E s2 e2),ESP: sptr ?exn::(?Sv s1 s2 e1 e2)@(?E s2 e2)}>
	CMP	EBX,SymbolNotFound?exn
	JNE	tapp(exn_case$16,<c$10,s1,s2,e1,e2>)
	PUSH	DWORD PTR [EAX+4]
	PUSH	string$17
	CALL	tapp(_Core?print_string,<ESP 1 4 s1,EBP 1,e1,e2>)
	ADD	ESP,4
	PUSH	DWORD PTR [ESP]
	CALL	tapp(_Core?print_string,<ESP 1 4 s1,EBP 1,e1,e2>)
	ADD	ESP,8
	JMP	tapp(switchend$9,<s1,s2,e1,e2>)
exn_case$16:
LABELTYPE <All[c$10:Tm s1:Ts s2:Ts e1:Tcap e2:Tcap].code {cap: &[e1,e2],EAX: ^*[(?exnname c$10)^r,c$10],EBX: ?exnname c$10,EBP: sptr (?E s2 e2),ESP: sptr ?exn::(?Sv s1 s2 e1 e2)@(?E s2 e2)}>
	CMP	EBX,WrongType?exn
	JNE	tapp(exn_case$18,<c$10,s1,s2,e1,e2>)
	PUSH	DWORD PTR [EAX+4]
	PUSH	string$19
	CALL	tapp(_Core?print_string,<ESP 1 4 s1,EBP 1,e1,e2>)
	ADD	ESP,4
	PUSH	DWORD PTR [ESP]
	CALL	tapp(_Core?print_string,<ESP 1 4 s1,EBP 1,e1,e2>)
	ADD	ESP,8
	JMP	tapp(switchend$9,<s1,s2,e1,e2>)
exn_case$18:
LABELTYPE <All[c$10:Tm s1:Ts s2:Ts e1:Tcap e2:Tcap].code {cap: &[e1,e2],EAX: ^*[(?exnname c$10)^r,c$10],EBX: ?exnname c$10,EBP: sptr (?E s2 e2),ESP: sptr ?exn::(?Sv s1 s2 e1 e2)@(?E s2 e2)}>
	PUSH	string$20
	CALL	tapp(_Core?print_string,<ESP 1 3 s1,EBP 1,e1,e2>)
	ADD	ESP,4
	FALLTHRU	<s1,s2,e1,e2>
switchend$9:
LABELTYPE <All[s1:Ts s2:Ts e1:Tcap e2:Tcap].code {cap: &[e1,e2],EBP: sptr (?E s2 e2),ESP: sptr ?exn::(?Sv s1 s2 e1 e2)@(?E s2 e2)}>
	ADD	ESP,4
	FALLTHRU	<s1,s2,e1,e2>
tryend$4:
LABELTYPE <All[s1:Ts s2:Ts e1:Tcap e2:Tcap].code {cap: &[e1,e2],EBP: sptr (?E s2 e2),ESP: sptr (?Sv s1 s2 e1 e2)@(?E s2 e2)}>
	PUSH	string$21
	CALL	tapp(_Core?print_string,<ESP 1 2 s1,EBP 1,e1,e2>)
	ADD	ESP,4
	RETN
_tal_main:
LABELTYPE <code {ESP: sptr se}>
	PUSH	_pop_exn_handler
	MOV	EBP,ESP
	CALL	tapp(_pop_main,<se,se,cap[],cap[]>)
	POP	EBX
	PUSH	0
	JMP	tapp(_tal_exit,<se>)

	DATA

string$21:
COERCE	pack(<1>,array(4,0,<B1^rw>,?),<?str>)
	DD	1
	TAL_STRUCT
	DB	10
string$20:
COERCE	pack(<22>,array(4,0,<B1^rw>,?),<?str>)
	DD	22
	TAL_STRUCT
	DB	79,116,104,101,114,32,101,120,99,101,112,116,105,111,110,32,114,97,105,115,101,100
string$19:
COERCE	pack(<23>,array(4,0,<B1^rw>,?),<?str>)
	DD	23
	TAL_STRUCT
	DB	87,114,111,110,103,32,116,121,112,101,32,102,111,114,32,115,121,109,98,111,108,58,32
string$17:
COERCE	pack(<19>,array(4,0,<B1^rw>,?),<?str>)
	DD	19
	TAL_STRUCT
	DB	67,97,110,39,116,32,102,105,110,100,32,115,121,109,98,111,108,58,32
string$15:
COERCE	pack(<18>,array(4,0,<B1^rw>,?),<?str>)
	DD	18
	TAL_STRUCT
	DB	84,121,112,101,99,104,101,99,107,32,102,97,105,108,117,114,101,32
string$13:
COERCE	pack(<17>,array(4,0,<B1^rw>,?),<?str>)
	DD	17
	TAL_STRUCT
	DB	67,97,110,39,116,32,111,112,101,110,32,102,105,108,101,58,32
string$8:
COERCE	pack(<10>,array(4,0,<B1^rw>,?),<?str>)
	DD	10
	TAL_STRUCT
	DB	84,104,101,32,105,110,116,32,105,115
string$7:
COERCE	pack(<4>,array(4,0,<B1^rw>,?),<?str>)
	DD	4
	TAL_STRUCT
	DB	95,102,111,111
string$6:
COERCE	pack(<4>,array(4,0,<B1^rw>,?),<?str>)
	DD	4
	TAL_STRUCT
	DB	115,105,109,112
string$5:
COERCE	pack(<2>,array(4,0,<B1^rw>,?),<?str>)
	DD	2
	TAL_STRUCT
	DB	95,98
_b:
LABELTYPE <^*[B4^rw]>
	DD	subsume(<B4>,1)
_tr$$8:
COERCE	rollsum( <reptyp (crfn (crint crtrue crb4) (crcons (crint crtrue crb4) crnull))>,?)
	DD	6
	DD	_tr$$9
_tr$$9:
LABELTYPE <^*[(reptyp (crint crtrue crb4))^rw,(reptyplist (crcons (crint crtrue crb4) crnull))^rw]>
	DD	_tr$$4
	DD	_tr$$10
_tr$$10:
COERCE	rollsum(<reptyplist (crcons (crint crtrue crb4) crnull)>,?)
	DD	1
	DD	_tr$$11
_tr$$11:
LABELTYPE <^*[(reptyp (crint crtrue crb4))^rw,(reptyplist crnull)^rw]>
	DD	_tr$$4
	DD	_tr$$12
_tr$$12:
COERCE	rollsum(<reptyplist crnull>,?)
	DD	0
	DD	subsume(<B4>,0)
_tr$$4:
COERCE	rollsum(<reptyp (crint crtrue crb4)>,?)
	DD	1
	DD	_tr$$5
_tr$$5:
LABELTYPE <^*[(repbool crtrue)^rw,(repsize crb4)^rw]>
	DD	1
	DD	2



	_end_TAL
	END
