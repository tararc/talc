; TAL INTERFACE simple_call_e
; This file was generated by TALC
	TYPE	<?arr = fn c:T4 . Exist[?sz:Sint].^*[S(?sz)^r,array(?sz,c^rw)]>
	TYPE	<?str = Exist[?sz:Sint].^*[S(?sz)^r,array(?sz,B1^rw)]>
	TYPE	<?exnname = fn c$0:Tm . ^T^rw(c$0)*[junk 4]>
	TYPE	<?exn = Exist[c$0:Tm].^*[(?exnname c$0)^r,c$0]>
	TYPE	<?H = fn s:Ts e:Tcap . code {cap: e,EAX: ?exn,ESP: sptr s}>
	TYPE	<?E = fn s:Ts e:Tcap . (?H s e)::s>
	TYPE	<?S = fn ?ret:T4 ?s1:Ts ?s2:Ts ?e1:Tcap ?e2:Tcap . (code {cap: &[?e1,?e2],EAX: ?ret,EBP: sptr (?E ?s2 ?e2),ESP: sptr ?s1@(?E ?s2 ?e2)})::?s1>
	TYPE	<?Sv = fn ?s1:Ts ?s2:Ts ?e1:Tcap ?e2:Tcap . (code {cap: &[?e1,?e2],EBP: sptr (?E ?s2 ?e2),ESP: sptr ?s1@(?E ?s2 ?e2)})::?s1>
	TYPE	<?Ha = fn ?s1:Ts ?s2:Ts ?e1:Tcap ?e2:Tcap . (sptr (?E ?s2 ?e2))::(?s1@(?E ?s2 ?e2))>

	VAL	_pop_main,<All[s1:Ts s2:Ts e1:Tcap e2:Tcap].code {cap: &[e1,e2],EBP: sptr (?E s2 e2),ESP: sptr (?Sv s1 s2 e1 e2)@(?E s2 e2)}>
	VAL	_b,<^*[B4^rw]>
