// Stolen from Tempo

#include<core.h>
#include<math.h>
#include "poptiming.h"

open Core;
open Math;

// c is the result array. Specialize on size of c.
// Tempo set n < 50.  
// Tempo specializes on n only.
void cheb(float func(float), float c[], float xa, float xb)
{
  int n = size(c);
  int k, j;
  float xm, xp, sm;
  float f[] = new_array_float(n+1);

  xp = (xb + xa) / 2;
  xm = (xb - xa) / 2;

  for(k = 1; k <= n; k++) {
    f[k] = func(xp + xm * (:float)cos(pi * (k - 0.5) / n));
  }

  for(j = 0; j <= n-1; j++) {
    sm = 0.0;
    for(k = 1; k <= n; k++) {
      sm = sm + f[k] * (:float)cos(pi * (:float)j * ((:float)k - 0.5) / (:float)n);
    }
    c[j] = (:float)(2.0 / (:float)n) * sm;
  } 
  return;
}

void pop_main() {

  string s[] = std_args();
  
  if(size(s)!=2) {
    printf("usage: %s <length>\n",s[0]);
    return;
  }

  int len = int_of_string(s[1]);

  if(len<=0 || len >= 100) {
    printf("Invalid length %d\n",len);
    return;
  }

  float c[] = new_array_float(len+1);

  MAIN_TEST("cheb",COMPILER,PLAIN_KIND,s[1],0,cheb(mycos,c,1.0,3.0));

#ifdef DEBUG
  for(int i=0;i<len;i++) {
    printf("%g ",c[i]);
  }
  printf("\n");
#endif

}

static float mycos(float x) {
  return cos(x);
}
